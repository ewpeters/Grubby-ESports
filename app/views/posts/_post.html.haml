.post{:id => "post_#{post.id}", :class => stripe}
  - unless params[:controller] == "articles"
    = render :partial => "posts/actions", :locals => { :post => post }
  .details
    %a{:href => forum_topic_path(post.topic.forum, post.topic) + "/#{(params[:page] || 1)}" + "#post_#{post.id}", :name => "post_#{post.id}"}
      \#
      = post.number
    \-
    = time_ago_in_words(post.created_at) + " " + t(:ago)
    - unless post.edits.empty?
      \-
      = link_to pluralize(post.edits.size, "edit"), post_edits_path(post)
    - edits = current_user.can?(:see_hidden_edits, @forum) ? post.edits : post.edits.visible
    - unless edits.empty?
      %span.edit-note
        == - #{t(:This_post_was_edited_by)} #{post.editor.login} #{time_ago_in_words(post.updated_at, :vague => true)} #{t(:ago)}
  .body
    = post.text.html_safe
    / = parse_text(post.text).html_safe
    / - if post.attachments.exists?
    /   %h5 Attachments
    /   %ol
    /     - for attachment in post.attachments
    /       %li= link_to attachment.file_file_name, attachment.file.url
    - if post.user.can?(:use_signature, @forum) && !post.user.signature.blank?
      %p.signature
        %br
        ______________
        %br
      :preserve
        #{parse_text(post.user.signature)}

  .user_info
    %span.post_user
      = link_to(h(post.user), post.user)
    %br
    - if post.user.has_avatar?
      = image_tag post.user.avatar
    - elsif post.user.uid
      = image_tag("http://graph.facebook.com/#{post.user.uid}/picture")
    = post.user.rank
    %br
    == #{post.user.online? ? t(:Online) : t(:Offline)} - #{post.user.posts.count} #{t(:posts)}
    %br
    == #{t(:Since)} #{post.user.created_at.strftime(date_display)}
    %br
    == 