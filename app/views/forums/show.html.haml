- @title = t(:Viewing_forum, :forum => @forum)
%span.breadcrumbs
  = link_to(t(:Forums), forums_path)
  \&raquo;
  =raw breadcrumb(@forum).html_safe
- unless @forums.empty?
  %h2
    = t(:Subforums)
    = @forum.title
  %ul.forums
    = render :partial => "forum", :collection => @forums
%br
%h2= t(:Viewing_forum, :forum => @forum)
= will_paginate @topics
= render :partial => "topics/new_button"
- form_tag moderator_topics_path do
  %ul.topics.listing
    - if @forum.topics.exists?
      - for topic in @topics
        %li{:id => "topic_#{topic.id}", :class => stripe + " row"}
          - if current_user.can_moderate_topics?
            - if !topic.moved?
              = link_to check_box_tag("moderated_topics[]", topic.id, !topic.moderations.for_user(current_user).empty?, :id => "topic_#{topic.id}_moderated"), moderator_topic_moderations_path(topic), :remote => true, :method => :post
            - else
              = link_to check_box_tag("moderated_topics[]", topic.moved_to.id, !topic.moved_to.moderations.for_user(current_user).empty?, :id => "topic_#{topic.moved_to.id}_moderated"), moderator_topic_moderations_path(topic.moved_to), :remote => true, :method => :post
          %h3
            %div.status
              - if topic.sticky?
                = theme_image_tag("sticky.jpg", :alt => "Sticky")
              - elsif topic.moved?
                = theme_image_tag("moved.jpg", :alt => "Moved")
              - elsif topic.locked?
                = theme_image_tag("locked.jpg", :alt => "Locked")
              - elsif logged_in? && !topic.readers.include?(current_user)
                = theme_image_tag("new.png", :alt => "New")
              - else
                = theme_image_tag("old.png", :alt => "Old")
              - if current_user.can?(:view_reports, @forum)
                - if !topic.reports.empty?
                  = theme_image_tag("report.jpg", :title => t(:report, :count => topic.reports.count), :alt => "Reports")
            = link_to(h(topic.subject), topic.moved? ? forum_topic_path(topic.moved_to.forum, topic.moved_to) : forum_topic_path(topic.forum, topic))
          %span.author= (t(:Posted_by) + " " + link_to(h(topic.user), topic.user)).html_safe
          \-
          = t(:replies_count, :count => (topic.moved? ? topic.moved_to.posts.count : topic.posts.count) - 1) + ","
          = t(:views_count, :count => topic.views)
          %br
          - if topic.moved?
            \-
          - else
            %span= t(:Last_updated) + ":"
            - if topic.posts.last
              = time_ago_in_words(topic.posts.last.created_at)
              = t(:ago)
              = t(:by)
              = link_to h(topic.last_post.user), topic.last_post.user
          = will_paginate(topic.posts.paginate(:per_page => per_page, :page => 1), :prev_label => "", :next_label => "", :params => { :controller => "topics", :action => "show", :id => topic.id, :forum_id => @forum.id })
    - else
      %strong
        = t(:no_topics_for_forum)
        - if current_user.can?(:start_new_topics, @forum)
          = t(:Why_not)
          = link_to(t(:create_one?), new_forum_topic_path(@forum))

  - if current_user.can_moderate_topics?
    %span#moderated_topics_count
      - unless @moderated_topics_count.zero?
        = pluralize(@moderated_topics_count, "topic")
        = t(:selected_for_moderation)
    %br
    = render :partial => "topics/buttons"
= render :partial => "topics/new_button"

= will_paginate @topics
