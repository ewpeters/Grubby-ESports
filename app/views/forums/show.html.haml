#forum_body
  #header
    %span.breadcrumbs.left_header
      = link_to(t(:Forums), forums_path)
      \&raquo;
      =raw breadcrumb(@forum).html_safe
  #forums_body
    %div.topic_buttons
      = render :partial => "topics/new_button"
      = link_to("View your profile", edit_user_path(current_user), :class => "add_topic")
    - form_tag "/moderator/topics/moderate" do
      - if current_user.can_moderate_topics?
        %br
        %br
        = render :partial => "topics/buttons"
      - if @forum.topics.exists?
        - for topic in @topics
          - style = topic == @topics.first ? "margin-top: 45px" : ""
          %div{:id => "topic_#{topic.id}", :class => "topic", :style => style}
            - if current_user.can_moderate_topics?
              - if !topic.moved?
                %span.topic_check
                  = link_to check_box_tag("moderated_topics[]", topic.id, !topic.moderations.for_user(current_user).empty?, :id => "topic_#{topic.id}_moderated"), moderator_topic_moderations_path(topic), 'data-remote' => true, :method => :post
              - else
                %span.topic_check
                  = link_to check_box_tag("moderated_topics[]", topic.moved_to.id, !topic.moved_to.moderations.for_user(current_user).empty?, :id => "topic_#{topic.moved_to.id}_moderated"), moderator_topic_moderations_path(topic.moved_to), 'data-remote' => true, :method => :post
            %div.status
              - if topic.sticky?
                = theme_image_tag("sticky.png", :alt => "Sticky")
              - elsif topic.moved?
                = theme_image_tag("moved.png", :alt => "Moved")
              - elsif topic.locked?
                = theme_image_tag("locked.png", :alt => "Locked")
              - elsif logged_in? && !topic.readers.include?(current_user)
                = theme_image_tag("new.png", :alt => "New")
              - else
                = theme_image_tag("old.png", :alt => "Old")
              - if current_user.can?(:view_reports, @forum)
                - if !topic.reports.empty?
                  = theme_image_tag("report.jpg", :title => t(:report, :count => topic.reports.count), :alt => "Reports")
            %div.topic_title
              = link_to(h(topic.subject), topic.moved? ? forum_topic_path(topic.moved_to.forum, topic.moved_to) : forum_topic_path(topic.forum, topic))
            %div.topic_info
              %span.author= (t(:Posted_by) + " " + link_to(h(topic.user), topic.user)).html_safe
              %span= "::"
              - count = topic.moved? ? topic.moved_to.posts.count : topic.posts.count - 1
              = pluralize(count, "replies") + ","
              = t(:views_count, :count => topic.views)
              %span= "::"
              - if topic.moved?
                \-
              - else
                %span= t(:Last_updated) + ":"
                - if topic.posts.last
                  = time_ago_in_words(topic.posts.last.created_at)
                  = t(:ago)
                  = t(:by)
                  = link_to h(topic.last_post.user), topic.last_post.user
            = will_paginate(topic.posts.paginate(:per_page => per_page, :page => 1), :prev_label => "", :next_label => "", :params => { :controller => "topics", :action => "show", :id => topic.id, :forum_id => @forum.id })
      - else
        %strong
          = t(:no_topics_for_forum)
          - if current_user.can?(:start_new_topics, @forum)
            = t(:Why_not)
            = link_to(t(:create_one?), new_forum_topic_path(@forum))

    - if current_user.can_moderate_topics?
      %span#moderated_topics_count
        - unless @moderated_topics_count.zero?
          = pluralize(@moderated_topics_count, "topic")
          = t(:selected_for_moderation)
          %br          
    %div.powered_by
      %span Forums powered by 
      %a{:href => "https://github.com/radar/rboard", :target => "_blank"} rBoard
    %center
      %br
      = will_paginate @topics
  
